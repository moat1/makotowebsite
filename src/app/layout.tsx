"use client";
import "./globals.css";

import CloseIcon from "@mui/icons-material/Close";
import MenuIcon from "@mui/icons-material/Menu";
import { Inter } from "next/font/google";
import Image from "next/image";

const inter = Inter({ subsets: ["latin"] });

import Link from "next/link";
import { useState } from "react";

// export const metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };

const RootLayout = ({ children }: { children: React.ReactNode }) => {
  const [hamburger, setHamburger] = useState(false);

  // ヘッダーメニューの情報
  type Props = {
    href: string;
    pageName: string;
  }[];

  const HEADER_LINK: Props = [
    { href: "tech", pageName: "Tech" },
    { href: "portfolio", pageName: "Portfolio" },
    { href: "blog", pageName: "Blog" },
    { href: "account", pageName: "Account" },
    { href: "contact", pageName: "Contact" },
  ];

  // ハンバーガーメニュー
  const toggle = () => {
    setHamburger((prevState) => !prevState);
  };

  return (
    <html lang="ja">
      <body className={inter.className}>
        <header className="fixed left-0 top-0 z-20 flex w-full justify-between border-b-[1px] bg-white px-10 py-5 opacity-80">
          {/* ロゴ */}
          <div className="flex">
            {hamburger === false ? (
              <Link href="/" className="m-auto text-[25px] font-bold">
                <Image src="/pagelogo.png" width={120} height={80} alt="logo" />
              </Link>
            ) : (
              <Link href="/" onClick={toggle} className="m-auto text-[25px] font-bold">
                <Image src="/pagelogo.png" width={120} height={80} alt="logo" />
              </Link>
            )}
          </div>

          {/* 画面が768px以上の場合、ヘッダーにメニューを表示 */}
          <div className="mx-20 flex max-md:hidden">
            <ul className="m-auto flex">
              {HEADER_LINK.map((link) => {
                return (
                  <li key={link.href}>
                    <Link href={link.href}>
                      <div className="mx-2 p-2 text-gray-800 hover:text-blue-500">
                        {link.pageName}
                      </div>
                    </Link>
                  </li>
                );
              })}
            </ul>
          </div>

          {/* 画面が768px未満の場合、ハンバーガーメニューを表示 */}
          <div className="visible flex md:hidden" onClick={toggle}>
            {hamburger ? (
              <CloseIcon className="m-auto mx-2 h-10 w-10 rounded-3xl px-2 hover:bg-gray-100" />
            ) : (
              <MenuIcon className="m-auto mx-2 h-10 w-10 rounded-3xl px-2 hover:bg-gray-100" />
            )}
          </div>
        </header>

        {/* ハンバーガーメニュークリック時に表示されるメニュー */}
        <div className="h-[81px]"></div>
        {hamburger ? (
          <nav className="fixed top-0 z-10 h-[100vh] w-full bg-gray-100 pt-[81px] md:hidden">
            <ul className="flex h-full flex-col p-[10vh] text-xl text-gray-700">
              {HEADER_LINK.map((link) => {
                return (
                  <li key={link.href} className="m-auto hover:text-blue-500">
                    <Link href={link.href} onClick={toggle}>
                      {link.pageName}
                    </Link>
                  </li>
                );
              })}
            </ul>
          </nav>
        ) : null}

        {children}
      </body>
    </html>
  );
};

export default RootLayout;
